{"version":3,"sources":["webpack:///./documentation/1. tutorials/1.1 1minGetStart.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className"],"mappings":"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","file":"static/js/1-tutorials-1-1-1min-get-start.d4d751a7.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"your-input-under-one-minute\"}}>{`Your Input under one minute`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"1-build-a-controlled-input\"}}>{`1. Build a controlled Input.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`import { Input } from 'react-oxygen';\n\nconst GeneralInput = () => {\n  const [text, onTextChange] = useState('');\n\n  return (\n    <Input\n      type=\"text\"\n      value={text}\n      onChange={e => {\n        onTextChange(e.currentTarget.value);\n      }}\n    />\n  );\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"2-add-some-style\"}}>{`2. Add some style`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`import { Input } from 'react-oxygen';\n\nconst GeneralInput = () => {\n  const [text, onTextChange] = useState('');\n\n  return (\n    <Input\n      type=\"text\"\n      padding=\"8px\"\n      border=\"1px solid\"\n      borderColor=\"#dfe4ea\"\n      borderRadius=\"4px\"\n      value={text}\n      onChange={e => {\n        onTextChange(e.currentTarget.value);\n      }}\n    />\n  );\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"3-add-validation-feature\"}}>{`3. Add validation feature`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It will receive 2 props:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`validate`}</MDXTag>{`: a regexp for validate the user input`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`errorMsg`}</MDXTag>{`: a string for error message when validation failed`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`When error, the border color should change to red.`}<br/></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Error message is red, and success message will be green.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`import { Input } from 'react-oxygen';\n\nconst GeneralInput = ({ validate, errorText }) => {\n  const [input, onInputChange] = useState('');\n  const isCorrectInput = input && validate(text);\n\n  return (\n    <Box direction=\"column\" gap=\"8px\">\n      <Input\n        type=\"text\"\n        padding=\"8px\"\n        border={isCorrectInput ? '1px solid' : '2px dashed'}\n        borderColor={isCorrectInput ? '#dfe4ea' : 'red'}\n        borderRadius=\"4px\"\n        value={input}\n        onChange={e => {\n          onInputChange(e.currentTarget.value);\n        }}\n      />\n      <Text fontSize=\"12px\" color={isCorrectInput ? 'green' : 'red'}>\n        {isCorrectInput ? 'Great, you get it right' : errorText}\n      </Text>\n    </Box>\n  );\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"4-add-onhover-style\"}}>{`4. Add onHover style`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`<Input\n  // remove the other props for simplicity\n  css={{\n    '&:hover': {\n      borderColor: 'blue',\n    },\n  }}\n/>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"5-now-can-we-do-better\"}}>{`5. Now, can we do better?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Everything works fine. With this example, you should have a idea of how `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`react-oxygen`}</MDXTag>{` works. You can use all the other components like this `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Input>`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`And you can start building your own components library now.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`But we can do better, all these `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`8px`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`1px solid`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`#dfe4ea`}</MDXTag>{`, they are magic numbers, if you are building a production grade application, you might want to unify these values.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can see the following guide.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}