(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./documentation/1. tutorials/1.3 whatIsReponsiveType.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return u});var o=t("./node_modules/react/index.js"),a=t.n(o),r=t("./node_modules/@mdx-js/tag/dist/index.js");function m(e){return(m="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}function p(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function c(e,n){return!n||"object"!==m(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,n){return(l=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var u=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=c(this,i(n).call(this,e))).layout=null,t}var t,o,m;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&l(e,n)}(n,a.a.Component),t=n,(o=[{key:"render",value:function(){var e=this.props,n=e.components;s(e,["components"]);return a.a.createElement(r.MDXTag,{name:"wrapper",components:n},a.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"responsive"}},"Responsive"),a.a.createElement(r.MDXTag,{name:"p",components:n},"In the ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<BaseBox>")," page, you will see lots of props are ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Reponsive")," type. Basically, they are just a much easier way to write your media queries. It's from ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"styled-system"),"."),a.a.createElement(r.MDXTag,{name:"p",components:n},"The below document is just copy from ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"style-system"),". :P"),a.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"basic-usage"}},"Basic usage"),a.a.createElement(r.MDXTag,{name:"pre",components:n},a.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"<Box\n  width={[\n    1,    // 100% below the smallest breakpoint\n    1/2,  // 50% from the next breakpoint and up\n    1/4   // 25% from the next breakpoint and up\n  ]}\n/>\n\n// responsive margin\n<Text m={[ 0, 1, 2 ]} />\n\n// responsive padding\n<Text p={[ 2, 3, 4 ]} />\n\n// responsive font-size\n<Text fontSize={[ 3, 4, 5 ]} />\n")),a.a.createElement(r.MDXTag,{name:"blockquote",components:n},a.a.createElement(r.MDXTag,{name:"p",components:n,parentName:"blockquote"},"99% props in ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"react-oxygen")," is responsive!")),a.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"how-to-setup-breakpoints"}},"How to setup breakpoints"),a.a.createElement(r.MDXTag,{name:"pre",components:n},a.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"import { ThemeProvider } from 'styled-components';\n\nconst myTheme = {\n  breakpoints: ['40em', '52em', '64em', '80em'],\n};\n\n<ThemeProvider theme={myTheme}>\n  <Box width={[1, 1 / 2, 1 / 4]} />\n</ThemeProvider>;\n")),a.a.createElement(r.MDXTag,{name:"p",components:n},"In the end, it's just a property named ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"breakpoints")," in your ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"styled-components")," theme object."),a.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"use-object-style-to-make-things-more-explict"}},"Use object style to make things more explict"),a.a.createElement(r.MDXTag,{name:"p",components:n},"You may feel use array to represent the value is somewhat implict, you want to know which breakpoint does this value associate. You can."),a.a.createElement(r.MDXTag,{name:"pre",components:n},a.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"import { ThemeProvider } from 'styled-components';\n\nconst myTheme = {\n  breakpoints: {\n    sm: '40em',\n    md: '52em',\n    lg: '64em',\n    xl: '80em',\n  },\n};\n\n<ThemeProvider theme={myTheme}>\n  <Box\n    width={{\n      sm: 1,\n      md: 1 / 2,\n      lg: 1 / 4,\n    }}\n  />\n</ThemeProvider>;\n")),a.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"which-one-is-recommend"}},"Which one is recommend?"),a.a.createElement(r.MDXTag,{name:"p",components:n},"It depends on you, personally, I just use array everywhere. Because through a whole project, the ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"breakpoints")," settings is the same. So use array is clean and still easy to read because of the consistency."))}}])&&p(t.prototype,o),m&&p(t,m),n}()}}]);
//# sourceMappingURL=1-tutorials-1-3-what-is-reponsive-type.30517ad445e8704c218f.js.map